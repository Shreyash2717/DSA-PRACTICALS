INPUT:

borrow_records = {
    'Pratham': 3,
    'Ayush': 0,
    'Harshal': 5,
    'Yash': 2,
    'Siddhi': 0,
    'Sharavni': 5,
    'Samruddhi': 1
}


def compute_average(records):
    total = sum(records.values())
    count = len(records)
    return total / count


def find_max_min(records):
    non_zero_values = [val for val in records.values() if val > 0]
    max_borrow = max(records.values())         # Include all for max
    min_borrow = min(non_zero_values)          # Exclude 0 for min
    return max_borrow, min_borrow


def count_zero_borrowers(records):
    return list(records.values()).count(0)


def find_mode(records):
    from collections import Counter
    non_zero_values = [val for val in records.values() if val > 0]
    freq = Counter(non_zero_values)
    most_common = freq.most_common(1)[0][0]
    return most_common


average = compute_average(borrow_records)
max_borrow, min_borrow = find_max_min(borrow_records)
zero_count = count_zero_borrowers(borrow_records)
mode_borrow = find_mode(borrow_records)


print("Average books borrowed:", average)
print("Maximum books borrowed by any member:", max_borrow)
print("Minimum books borrowed by any member (excluding zero):", min_borrow)
print("Members who borrowed 0 books:", zero_count)
print("Most frequently borrowed count (mode, excluding zero):", mode_borrow)


OUTPUT:
Average books borrowed: 2.2857142857142856
Maximum books borrowed by any member: 5
Minimum books borrowed by any member (excluding zero): 1
Members who borrowed 0 books: 2
Most frequently borrowed count (mode, excluding zero): 5
